{
  "id": "prod-003",
  "title": "Daily Plannner Generator",
  "category": "productivity",
  "goal": "Help the users to organise the day clearly with priorities",
  "prompt": "Create a structured daily planner for {user_type} focusing on {main_goal} with time management and priorities.",
  "variables": ["user_type", "main_goal"],
  "tags": ["planner","productivity","organization","time management"],
  "models_tested": ["gpt-5","gemini-2.5","claude-3"],
  "responses": {
    "gpt-5": "Here’s a structured daily planner designed specifically for college students to manage time efficiently, complete assignments on time, and maintain balance throughout the day.\n\n## 🎓 Daily Planner for College Students\n\n### 🕘 1. Morning Routine (6:30 AM – 9:00 AM)\n| Time | Task | Purpose |\n|------|------|----------|\n| 6:30 – 7:00 AM | Wake up & stretch | Refresh your mind and body |\n| 7:00 – 7:30 AM | Breakfast | Boost energy for the day |\n| 7:30 – 8:00 AM | Review today’s schedule | Set priorities and goals |\n| 8:00 – 9:00 AM | Quick study/review session | Revise notes or prepare for classes |\n\n### 🎒 2. Class & Study Block (9:00 AM – 1:00 PM)\n| Time | Task | Purpose |\n|------|------|----------|\n| 9:00 – 12:00 PM | Attend classes | Focus on lectures and participation |\n| 12:00 – 1:00 PM | Lunch / Break | Recharge and socialize |\n\n### ✍️ 3. Assignment Focus Block (1:00 PM – 4:00 PM)\n| Time | Task | Purpose |\n|------|------|----------|\n| 1:00 – 2:30 PM | Work on urgent assignments | Complete tasks due soon |\n| 2:30 – 3:00 PM | Short break | Rest and reset |\n| 3:00 – 4:00 PM | Continue or review work | Edit, proofread, or start next task |\n\n🧩 Tip: Use the Pomodoro method (25 mins work + 5 mins break) for better focus.\n\n### 📚 4. Study & Research (4:00 PM – 6:00 PM)\n| Time | Task | Purpose |\n|------|------|----------|\n| 4:00 – 5:00 PM | Study difficult subjects | Deep learning and understanding |\n| 5:00 – 6:00 PM | Group study or library time | Collaboration and resource use |\n\n### 🌇 5. Evening Routine (6:00 PM – 9:00 PM)\n| Time | Task | Purpose |\n|------|------|----------|\n| 6:00 – 7:00 PM | Exercise / Walk | Physical well-being |\n| 7:00 – 8:00 PM | Dinner / Relaxation | Social or personal time |\n| 8:00 – 9:00 PM | Review notes or plan tomorrow | Stay organized and reduce stress |\n\n### 🌙 6. Night Routine (9:00 PM – 11:00 PM)\n| Time | Task | Purpose |\n|------|------|----------|\n| 9:00 – 10:00 PM | Light reading / hobby | Mental relaxation |\n| 10:00 – 10:30 PM | Prepare for sleep | Set alarm, tidy workspace |\n| 10:30 – 11:00 PM | Sleep | 7–8 hours of rest is essential |\n\n### 🧭 Priority Checklist\n1. Identify urgent assignments (due within 2 days)\n2. Break big tasks into smaller subtasks\n3. Use a planner app or notebook to track deadlines\n4. Allocate fixed time slots for studies and breaks\n5. Reflect daily on what went well and what to improve\n\nWould you like me to turn this into a printable daily planner template (PDF) with fillable time slots and checkboxes?",
    "gemini-2.5":  "## College Student Daily Planner: Focus on Timely Assignments ⏰\n\nThis structured planner uses time blocking and a priority system to help you manage your day and ensure assignments are completed without last-minute stress.\n\n---\n\n### I. Morning Prep & High-Priority Block (7:00 AM – 11:30 AM)\n\n| Time Slot | Activity | Focus/Priority | Notes/Assignment |\n| :---: | :--- | :--- | :--- |\n| 7:00 AM | Wake Up & Get Ready | **Personal Care** | (Hydrate, light exercise, quick breakfast) |\n| 8:00 AM | **Priority Block 1 (Deep Work)** | **A** - Start/Complete most difficult assignment/reading (or work on assignment **due today**). | *Goal: 90 minutes of focused, distraction-free work.* |\n| 9:30 AM | Class/Lecture | **Academic** | (Check syllabus for pre-reading) |\n| 10:30 AM | Brief Break | **Refuel** | (Stretch, walk, snack) |\n| 11:00 AM | **Priority Block 2** | **B** - Review class notes, organize materials for next class, or work on second most difficult assignment. | *Start on work due tomorrow/day after.* |\n\n---\n\n### II. Afternoon Academic & Administration (11:30 AM – 4:30 PM)\n\n| Time Slot | Activity | Focus/Priority | Notes/Assignment |\n| :---: | :--- | :--- | :--- |\n| 11:30 AM | Lunch & Socialize | **Rest & Recharge** | (Keep it to 45-60 minutes) |\n| 12:30 PM | Class/Lecture | **Academic** | (Active listening/note-taking) |\n| 1:30 PM | **Priority Block 3 (Productive Admin)** | **C** - Complete all quick tasks (emails, organizing digital files, scheduling, short readings). | *Clear out the to-do list noise.* |\n| 2:30 PM | Class/Lecture/Lab | **Academic** | |\n| 3:30 PM | **Buffer Time/Review** | **C** - Check tomorrow's schedule and assignments. Do a quick **5-minute cleanup** of your study space. | *Use this time to catch up if running behind.* |\n\n---\n\n### III. Evening Review & Planning (4:30 PM – 9:00 PM)\n\n| Time Slot | Activity | Focus/Priority | Notes/Assignment |\n| :---: | :--- | :--- | :--- |\n| 4:30 PM | Break/Activity | **Movement/Social** | (Gym, club meeting, call a friend) |\n| 6:00 PM | Dinner | **Personal Care** | (Cook or eat, step away from desk) |\n| 7:00 PM | **Priority Block 4 (Review/Prep)** | **B/C** - Work on easier or larger, ongoing projects. Review today's lecture material. | *Consolidate learning from the day.* |\n| 8:30 PM | **Daily Plan** | **Logistics** | **Review the Daily Triage Section below.** Set goals for tomorrow. |\n\n---\n\n### IV. Daily Triage & Priority System\n\nBefore starting your day (or the night before), quickly triage your tasks:\n\n| Priority | Definition | Action |\n| :---: | :---: | :--- |\n| **A** | **Urgent & Important** | **Must** be done today. (Due today, exam review, critical research). |\n| **B** | **Important but Not Urgent** | Work on these after 'A' tasks. (Due in 2-3 days, reading for next week's discussion, large project component). |\n| **C** | **Non-Urgent Tasks** | Group these and do them in bulk during **Productive Admin** time. (Emails, organizing notes, textbook highlighting, small errands). |\n\n#### **To-Do List for Today:**\n\n1. **(A) ______________________________________________ (e.g., Finish Physics Lab Report)**\n2. **(B) ______________________________________________ (e.g., Outline History Paper)**\n3. **(C) ______________________________________________ (e.g., Reply to Advisor Email)**\n\n#### **Assignment Check-In:**\n\n* **Assignment Due Today:** ________________________________\n* **Next Assignment Due:** ________________________________\n* **Total Study Hours Completed:** **_______** (Aim for 4–6 focused hours)\n\n---\n\n### V. Late Evening & Wind Down (9:00 PM Onward)\n\n| Time Slot | Activity | Focus/Priority | Notes/Assignment |\n| :---: | :--- | :--- | :--- |\n| 9:00 PM | Hobbies/Relaxation | **Wellbeing** | (Reading, music, gaming, or time with friends/family) |\n| 10:00 PM | Prep for Tomorrow | **Logistics** | (Pack bag, plan outfit, charge devices) |\n| 10:30 PM | Wind Down Routine | **Personal Care** | (Meditation or quiet reading) |\n| 11:00 PM | Sleep | **Recharge** | (7–9 hours recommended) |",
    "claude-3":  "import React, { useState } from 'react';\nimport { Trash2, Plus, Check } from 'lucide-react';\n\nexport default function DailyPlanner() {\n  const [tasks, setTasks] = useState([]);\n  const [newTask, setNewTask] = useState('');\n  const [newPriority, setNewPriority] = useState('medium');\n  const [newDeadline, setNewDeadline] = useState('');\n  const [newTime, setNewTime] = useState('');\n  const [selectedDate, setSelectedDate] = useState(new Date().toISOString().split('T')[0]);\n\n  const addTask = () => {\n    if (newTask.trim() && newDeadline && newTime) {\n      const task = {\n        id: Date.now(),\n        text: newTask,\n        priority: newPriority,\n        deadline: newDeadline,\n        time: newTime,\n        completed: false,\n        date: selectedDate\n      };\n      setTasks([...tasks, task]);\n      setNewTask('');\n      setNewDeadline('');\n      setNewTime('');\n      setNewPriority('medium');\n    }\n  };\n\n  const toggleTask = (id) => {\n    setTasks(tasks.map(task => task.id === id ? { ...task, completed: !task.completed } : task));\n  };\n\n  const deleteTask = (id) => {\n    setTasks(tasks.filter(task => task.id !== id));\n  };\n\n  const todayTasks = tasks.filter(task => task.date === selectedDate).sort((a, b) => {\n    const priorityOrder = { high: 0, medium: 1, low: 2 };\n    return priorityOrder[a.priority] - priorityOrder[b.priority];\n  });\n\n  const completedCount = todayTasks.filter(t => t.completed).length;\n  const completionRate = todayTasks.length > 0 ? Math.round((completedCount / todayTasks.length) * 100) : 0;\n\n  const getPriorityColor = (priority) => {\n    const colors = {\n      high: 'bg-red-100 border-l-4 border-red-500',\n      medium: 'bg-yellow-100 border-l-4 border-yellow-500',\n      low: 'bg-green-100 border-l-4 border-green-500'\n    };\n    return colors[priority];\n  };\n\n  const getPriorityBadge = (priority) => {\n    const badges = {\n      high: 'bg-red-500 text-white',\n      medium: 'bg-yellow-500 text-white',\n      low: 'bg-green-500 text-white'\n    };\n    return badges[priority];\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 p-6\">\n      <div className=\"max-w-4xl mx-auto\">\n        <div className=\"text-center mb-8\">\n          <h1 className=\"text-4xl font-bold text-indigo-900 mb-2\">📚 College Daily Planner</h1>\n          <p className=\"text-gray-600\">Stay organized, meet deadlines, achieve your goals</p>\n        </div>\n        {/* Dashboard Stats */}\n        <div className=\"grid grid-cols-3 gap-4 mb-8\">\n          <div className=\"bg-white rounded-lg shadow p-4 text-center\">\n            <div className=\"text-3xl font-bold text-indigo-600\">{todayTasks.length}</div>\n            <div className=\"text-sm text-gray-600\">Tasks Today</div>\n          </div>\n          <div className=\"bg-white rounded-lg shadow p-4 text-center\">\n            <div className=\"text-3xl font-bold text-green-600\">{completedCount}</div>\n            <div className=\"text-sm text-gray-600\">Completed</div>\n          </div>\n          <div className=\"bg-white rounded-lg shadow p-4 text-center\">\n            <div className=\"text-3xl font-bold text-blue-600\">{completionRate}%</div>\n            <div className=\"text-sm text-gray-600\">Progress</div>\n          </div>\n        </div>\n        {/* Progress Bar */}\n        <div className=\"bg-white rounded-lg shadow p-4 mb-8\">\n          <div className=\"flex justify-between items-center mb-2\">\n            <span className=\"font-semibold text-gray-700\">Daily Progress</span>\n            <span className=\"text-sm text-gray-600\">{completedCount}/{todayTasks.length}</span>\n          </div>\n          <div className=\"w-full bg-gray-200 rounded-full h-3\">\n            <div className=\"bg-gradient-to-r from-green-400 to-green-600 h-3 rounded-full transition-all duration-500\" style={{ width: `${completionRate}%` }}></div>\n          </div>\n        </div>\n        {/* Add Task Form */}\n        <div className=\"bg-white rounded-lg shadow p-6 mb-8\">\n          <h2 className=\"text-xl font-bold text-gray-800 mb-4\">➕ Add New Task</h2>\n          <div className=\"space-y-4\">\n            <input type=\"text\" placeholder=\"What assignment do you need to complete?\" value={newTask} onChange={(e) => setNewTask(e.target.value)} className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500\" />\n            <div className=\"grid grid-cols-2 gap-4\">\n              <input type=\"time\" value={newTime} onChange={(e) => setNewTime(e.target.value)} className=\"px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500\" />\n              <input type=\"date\" value={newDeadline} onChange={(e) => setNewDeadline(e.target.value)} className=\"px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500\" />\n            </div>\n            <div className=\"flex gap-4\">\n              <select value={newPriority} onChange={(e) => setNewPriority(e.target.value)} className=\"flex-1 px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500\">\n                <option value=\"high\">🔴 High Priority</option>\n                <option value=\"medium\">🟡 Medium Priority</option>\n                <option value=\"low\">🟢 Low Priority</option>\n              </select>\n              <button onClick={addTask} className=\"bg-indigo-600 hover:bg-indigo-700 text-white font-semibold px-6 py-2 rounded-lg flex items-center gap-2 transition\">\n                <Plus size={20} /> Add Task\n              </button>\n            </div>\n          </div>\n        </div>\n        {/* Task List */}\n        <div className=\"bg-white rounded-lg shadow p-6\">\n          <h2 className=\"text-xl font-bold text-gray-800 mb-4\">📋 Today's Tasks</h2>\n          {todayTasks.length === 0 ? (\n            <div className=\"text-center py-12\">\n              <div className=\"text-4xl mb-3\">✨</div>\n              <p className=\"text-gray-500 text-lg\">No tasks yet. Add one to get started!</p>\n            </div>\n          ) : (\n            <div className=\"space-y-3\">\n              {todayTasks.map(task => (\n                <div key={task.id} className={`p-4 rounded-lg ${getPriorityColor(task.priority)} flex items-center gap-4 transition hover:shadow-md`}>\n                  <button onClick={() => toggleTask(task.id)} className={`flex-shrink-0 w-6 h-6 rounded border-2 flex items-center justify-center transition ${task.completed ? 'bg-green-500 border-green-500' : 'border-gray-400 hover:border-green-500'}`}>\n                    {task.completed && <Check size={16} className=\"text-white\" />}\n                  </button>\n                  <div className=\"flex-grow\">\n                    <div className=\"flex items-center gap-2 mb-1\">\n                      <span className={`text-sm font-semibold px-2 py-1 rounded ${getPriorityBadge(task.priority)}`}>{task.priority.toUpperCase()}</span>\n                      <span className=\"text-sm font-semibold text-gray-700\">{task.time}</span>\n                      <span className=\"text-sm text-gray-600\">Due: {new Date(task.deadline).toLocaleDateString('en-US', { month: 'short', day: 'numeric' })}</span>\n                    </div>\n                    <p className={`text-gray-800 font-medium ${task.completed ? 'line-through text-gray-500' : ''}`}>{task.text}</p>\n                  </div>\n                  <button onClick={() => deleteTask(task.id)} className=\"text-red-500 hover:text-red-700 transition flex-shrink-0\">\n                    <Trash2 size={20} />\n                  </button>\n                </div>\n              ))}\n            </div>\n          )}\n        </div>\n        <div className=\"bg-indigo-50 border border-indigo-200 rounded-lg p-6 mt-8\">\n          <h3 className=\"font-bold text-indigo-900 mb-3\">💡 Time Management Tips</h3>\n          <ul className=\"text-sm text-indigo-800 space-y-2\">\n            <li>✓ Prioritize high-priority tasks first</li>\n            <li>✓ Break large assignments into smaller tasks</li>\n            <li>✓ Set realistic time estimates</li>\n            <li>✓ Use time blocks to minimize distractions</li>\n            <li>✓ Review your planner every morning</li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n}"
  }, 
  "last_updated": "2025-10-16"
}